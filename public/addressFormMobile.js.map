{"version":3,"sources":["webpack:///./browser/components/address/mobile/AddressFormPage/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA0B;AACG;AAEmC;AAI3B;AAEE;AAEY;AACT;AAE1C;IAAqC,mCAAe;IAClD,yBAAY,KAAK;QAAjB,YACE,kBAAM,KAAK,CAAC,SAEb;QADC,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IACzD,CAAC;IAED,2CAAiB,GAAjB;QACE,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE;YACvD,8EAAmB,CAAC,cAAc,CAAC,CAAC;SACrC;aAAM;YACL,8EAAmB,CAAC,iBAAiB,CAAC,CAAC;SACxC;QACD,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACrD,CAAC;IACD;oFACgF;IAChF,yCAAe,GAAf;QAAA,iBAiBC;QAhBS,YAAQ,GAAK,IAAI,CAAC,KAAK,SAAf,CAAgB;QAChC,IAAI,wBAAwB,GAC1B,QAAQ,IAAI,QAAQ,CAAC,KAAK;YACxB,CAAC,CAAC,iDAAG,CAAC,QAAQ,EAAE,gCAAgC,CAAC;YACjD,CAAC,CAAC,KAAK,CAAC;QACZ,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE;YAC7C,IACE,wBAAwB;gBACxB,6EAAgB,CAAC,iBAAiB,CAAC;gBACnC,6EAAgB,CAAC,cAAc,CAAC,EAChC;gBACA,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aACvB;iBAAM;gBACL,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAM,GAAN;QACQ,SAA0D,IAAI,CAAC,KAAK,EAAlE,WAAW,mBAAE,OAAO,eAAE,mBAAmB,2BAAE,QAAQ,cAAe,CAAC;QAC3E,IAAM,SAAS,GAAG,iDAAG,CAAC,QAAQ,EAAE,iCAAiC,EAAE,KAAK,CAAC,CAAC;QAC1E,OAAO,CACL;YACE,yDAAC,sDAAM,IAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,GAAI;YACzC,yDAAC,wDAAW,IACV,SAAS,EAAE,SAAS,EACpB,eAAe,EAAE,IAAI,CAAC,eAAe,EACrC,WAAW,EAAE,WAAW,EACxB,mBAAmB,EAAE,mBAAmB,EACxC,IAAI,EAAC,QAAQ,GACb,CACE,CACP,CAAC;IACJ,CAAC;IACH,sBAAC;AAAD,CAAC,CAnDoC,oDAAe,GAmDnD;;AAED,iEAAe,wDAAU,CAAC,eAAe,CAAC,EAAC","file":"addressFormMobile.js","sourcesContent":["import React from 'react';\nimport get from 'lodash/get';\n\nimport { setDocTitleInMobile } from 'commonBrowserUtils/Helper';\nimport {\n  isFeatureEnabled,\n  isVariantEnabled\n} from 'commonUtils/FeaturesManager';\n\nimport Loader from 'commonComp/Loader';\n\nimport AddressForm from '../../common/AddressForm';\nimport { withRouter } from 'react-router';\n\nexport class AddressFormPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.successCallback = this.successCallback.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.addressInfo && this.props.addressInfo.id) {\n      setDocTitleInMobile('EDIT ADDRESS');\n    } else {\n      setDocTitleInMobile('ADD NEW ADDRESS');\n    }\n    this.props.setToContainerState({ action: 'back' });\n  }\n  /* If not navigating to Add/EditAddress from List page using initiatedFromAddressMain state prop to call goBack once,\n  else work with normal flow(Address -> List page -> Edit/Add) and goBack twice.*/\n  successCallback() {\n    const { location } = this.props;\n    let initiatedFromAddressMain =\n      location && location.state\n        ? get(location, 'state.initiatedFromAddressMain')\n        : false;\n    this.props.setToContainerState({ action: '' }, () => {\n      if (\n        initiatedFromAddressMain ||\n        isVariantEnabled('AOC_V2_VARIANT3') ||\n        isFeatureEnabled('ORDER_REVIEW')\n      ) {\n        this.props.goBack(-1);\n      } else {\n        this.props.goBack(-2);\n      }\n    });\n  }\n\n  render() {\n    const { addressInfo, loading, handleAddressAction, cartData } = this.props;\n    const isNewUser = get(cartData, 'userDetails.isFirstTimeCustomer', false);\n    return (\n      <div>\n        <Loader show={loading} backdrop={true} />\n        <AddressForm\n          isNewUser={isNewUser}\n          successCallback={this.successCallback}\n          addressInfo={addressInfo}\n          handleAddressAction={handleAddressAction}\n          mode=\"mobile\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(AddressFormPage);\n"],"sourceRoot":""}