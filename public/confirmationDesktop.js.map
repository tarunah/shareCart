{"version":3,"sources":["webpack:///./browser/components/confirmation/desktop/index.js","webpack:///./utils/loadComponent.js"],"names":[],"mappings":"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","file":"confirmationDesktop.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Local Components\nimport ConfirmationScreen from '../common/ConfirmationScreen';\n\n//Common components\nimport Buttons from 'commonComp/InlineButtonV3';\nimport Modal from 'commonComp/Modal';\nimport ErrorPage from 'commonComp/ErrorPage';\n\n// Utils\nimport { errorMessage } from 'commonBrowserUtils/ConfirmationConstants';\nimport { confirmationScreenTypeVSHeaderMap as typeHeaderMap } from 'commonUtils/constants';\nimport { isFeatureEnabled } from 'commonUtils/FeaturesManager';\n\nimport {\n  confirmationSubComponentsConfig,\n  modalContentGetter\n} from '../common/confirmationCardsConfig';\n\n// Styles\nimport Styles from './desktop.base.css';\n\nclass ConfirmationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.cardComponentRenderer = this.cardComponentRenderer.bind(this);\n    this.cardComponentsToDisplay = null;\n  }\n\n  componentDidMount() {\n    SHELL.setActivePage(\n      typeHeaderMap[this.props.screenType] || typeHeaderMap.default\n    );\n  }\n\n  cardComponentRenderer(cards = []) {\n    const {\n      actionHandlers: { showLoader }\n    } = this.props;\n\n    const orderedCards = [];\n    cards.forEach(card => {\n      let CardComponent = confirmationSubComponentsConfig[card];\n      CardComponent &&\n        orderedCards.push(\n          <CardComponent\n            key={card}\n            getModalContent={modalContentGetter(this.props.actionHandlers)}\n            styleClass={Styles.confirmationCard}\n            mode={'desktop'}\n            showLoader={showLoader}\n            {...this.props}\n          />\n        );\n    });\n    return (this.cardComponentsToDisplay = (\n      <div className={Styles.confirmationCardContainer}>{orderedCards}</div>\n    ));\n  }\n\n  render() {\n    const {\n      cardComponentsToDisplay,\n      cardComponentRenderer,\n      props: { dataState, actionHandlers, screenType }\n    } = this;\n    const {\n      confirmationModal: { show: showModal, params: modalParams },\n      error\n    } = dataState;\n\n    let showFallback = false;\n    let showError = false;\n    let unauthorized = false;\n\n    if (error) {\n      unauthorized = error.httpStatus === 403;\n      if (\n        isFeatureEnabled('CONFIRMATION_FALLBACK') &&\n        error.myntraReferer &&\n        !unauthorized\n      ) {\n        showFallback = true;\n      } else {\n        showError = true;\n      }\n    }\n\n    return (\n      <div>\n        {showError ? (\n          <ErrorPage\n            message={error.message || errorMessage}\n            reload={!unauthorized && error.myntraReferer}\n          />\n        ) : (\n          <div className={Styles.container}>\n            <center className={Styles.cardLayout}>\n              <div className={Styles.cardContainer}>\n                <ConfirmationScreen\n                  mode=\"desktop\"\n                  type={screenType}\n                  cardComponentsToDisplay={cardComponentsToDisplay}\n                  cardComponentRenderer={cardComponentRenderer}\n                  showFallback={showFallback}\n                  dataState={{ ...dataState }}\n                  actionHandlers={{ ...actionHandlers }}\n                />\n                {showModal && (\n                  <Modal\n                    className={Styles.modalContainer}\n                    halfCard={false}\n                    cancelCallback={() =>\n                      actionHandlers.toggleConfirmationModal({\n                        eventName:\n                          'DOPE_PAYMENT_FAILED_CANCEL_ORDER_MODAL_CLOSE'\n                      })\n                    }\n                    cancelIconConfig={{ show: true }}\n                  >\n                    <div>\n                      <div className={Styles.modalHeader}>\n                        {modalParams.header}\n                      </div>\n                      <div className={Styles.modalDesc}>\n                        {modalParams.bodyHeader}\n                      </div>\n                      <div className={Styles.modalDesc}>\n                        {modalParams.bodyDescription}\n                      </div>\n                      <Buttons buttons={modalParams.buttons} />\n                    </div>\n                  </Modal>\n                )}\n              </div>\n            </center>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nConfirmationComponent.propTypes = {\n  dataState: PropTypes.object,\n  actionHandlers: PropTypes.object\n};\n\nexport default ConfirmationComponent;\n","import React from 'react';\nimport Loader from 'commonComp/Loader';\nimport Loadable from 'commonComp/Loadable';\n\nimport { errorNotification } from 'commonBrowserUtils/Helper';\nimport Strings from 'commonBrowserUtils/Strings';\n\nfunction loadComponent({\n  loader,\n  loading,\n  errorCallback,\n  loaderProperties = {}\n}) {\n  const { show = false, backdrop = false } = loaderProperties;\n  return Loadable({\n    loader,\n    loading:\n      loading ||\n      ((props = {}) => <Loader show={show} backdrop={backdrop} {...props} />),\n    errorCallback:\n      errorCallback ||\n      (() => errorNotification({ message: Strings.BUNDLE_LOAD_ERROR }))\n  });\n}\n\nexport default loadComponent;\n"],"sourceRoot":""}