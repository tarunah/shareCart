{"version":3,"sources":["webpack:///./browser/utils/PaymentsManager.js"],"names":[],"mappings":"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","file":"browser_utils_PaymentsManager_js.js","sourcesContent":["import get from 'lodash/get';\nimport RequestManager from 'commonUtils/RequestManager';\nimport { getConfig } from 'commonUtils/requestConfig';\nimport config from '../../config';\nimport {\n  getCookie,\n  getDeviceId,\n  getUidx,\n  getXMetaApp\n} from 'commonBrowserUtils/Helper';\nimport {\n  isFeatureEnabled,\n  isVariantEnabled\n} from 'commonUtils/FeaturesManager';\nimport {\n  getCartContext,\n  checkExchangeCart\n} from 'commonBrowserUtils/CartHelper';\nimport { cookieKeys, checkoutPage } from 'commonUtils/constants';\n\nconst PaymentsManager = (function() {\n  return {\n    getPageData(options = {}, cartData = {}) {\n      let headers = {\n        pagesource: checkoutPage.PAYMENT,\n        ...getConfig().headers\n      };\n\n      const addedgiftcard = options.addedGiftcard;\n      const gcfetched = get(options, 'prefetchedData.gcBalance') ? true : false;\n      const lpfetched = get(options, 'prefetchedData.lpBalance') ? true : false;\n      // whether to fetch gc\n      const gcLazyLoad = isFeatureEnabled('AUTOGC_BALANCE_LAZYLOAD', null);\n      const fetchGC =\n        addedgiftcard ||\n        (!gcfetched && isFeatureEnabled('AUTOGC_ENABLED', null) && !gcLazyLoad);\n\n      // whether to fetch lp\n      const lpLazyLoad = isFeatureEnabled('LP_BALANCE_LAZYLOAD', null);\n      const fetchLP =\n        !lpfetched && isFeatureEnabled('LP_ENABLED', null) && !lpLazyLoad;\n\n      // whether to fetch address\n      const fetchAddress =\n        isVariantEnabled('AOC_V2_VARIANT3') || checkExchangeCart(cartData);\n\n      const isCartDataAvailable = cartData.id;\n\n      const mode = isCartDataAvailable ? 'spa' : '';\n\n      const stampCart = isCartDataAvailable\n        ? !cartData.orderAddressId || !cartData.unifiedAddressId\n        : false;\n\n      // Resolve the data if there's nothing to fetch\n      if (\n        mode === 'spa' &&\n        !fetchGC &&\n        !fetchLP &&\n        !fetchAddress &&\n        !stampCart\n      ) {\n        return Promise.resolve({});\n      }\n\n      const retryQueryPath = {};\n      if (options.payMode) {\n        retryQueryPath.mode = options.payMode;\n        retryQueryPath.ppsid = options.ppsId;\n        retryQueryPath.referrer = options.referrer;\n      }\n\n      const cartContext = getCartContext();\n\n      let addressID = '';\n      if (cartContext === 'egiftcard') {\n        addressID = getCookie(cookieKeys.GIFT_ORDER_ADDRESS_ID);\n      } else if (fetchAddress && cartData.orderAddressId) {\n        addressID = `${cartData.orderAddressId}`;\n      } else if (stampCart) {\n        addressID = getCookie(cookieKeys.ORDER_ADDRESS_ID);\n      }\n      const cartUnselected = 'false';\n\n      const payload = {\n        mode,\n        addressID,\n        cartContext,\n        fetchGC,\n        fetchLP,\n        fetchAddress,\n        cartUnselected,\n        stampCart,\n        ...retryQueryPath\n      };\n\n      const { clientUrl } = config('fetchPayment');\n\n      return RequestManager.handleRequestWithPromise({\n        method: 'post',\n        url: clientUrl,\n        headers,\n        data: payload\n      });\n    },\n\n    getPaymentOptions(props, successCallback, errorCallback) {\n      const { clientUrl, client, version } = config('ppsClient');\n      const { isExchangeCart = false, ...data } = props;\n      const headers = {\n        Client: client,\n        Version: version,\n        'Content-Type': 'application/json',\n        xMetaApp: getXMetaApp(),\n        'saved-instruments': true,\n        'paynow-version': 'v3',\n        ...getConfig().headers\n      };\n\n      isFeatureEnabled('RECOMMENDED_OPTIONS') &&\n        (headers['payment-personalization'] = true);\n\n      RequestManager.handle(\n        {\n          method: 'post',\n          url: `${clientUrl}v3/paymentInstruments`,\n          data,\n          headers\n        },\n        successCallback,\n        errorCallback\n      );\n    },\n\n    getDeferredPaymentOptions(data, successCallback, errorCallback) {\n      const { clientUrl, client, version } = config('ppsClient');\n      const headers = {\n        Client: client,\n        Version: version,\n        'Content-Type': 'application/json',\n        xMetaApp: getXMetaApp(),\n        'saved-instruments': true,\n        ...getConfig().headers\n      };\n\n      RequestManager.handle(\n        {\n          method: 'post',\n          url: `${clientUrl}deferredPayment/v1/paymentInstruments`,\n          data,\n          headers\n        },\n        successCallback,\n        errorCallback\n      );\n    },\n\n    requestOTPGateway(data, successCallback, errorCallback) {\n      const { clientRoot, path } = config('shield');\n      RequestManager.handle(\n        {\n          method: 'post',\n          url: `${clientRoot}${path}otp/send`,\n          data,\n          headers: {\n            'x-mynt-ctx': `storeid=2297;uidx=${getUidx()}`,\n            'm-clientid': 'myntra-02d7dec5-8a00-4c74-9cf7-9d62dbea5e61'\n          }\n        },\n        successCallback,\n        errorCallback\n      );\n    },\n\n    generateCaptcha(successCallback, errorCallback) {\n      RequestManager.handle(\n        {\n          method: 'get',\n          url: config('captcha').clientUrl,\n          headers: { accept: 'application/json' }\n        },\n        successCallback,\n        errorCallback\n      );\n    },\n\n    addGiftCard(data, successCallback, errorCallback) {\n      RequestManager.handle(\n        {\n          method: 'post',\n          url: `${config('giftcard').clientUrl}`,\n          data,\n          headers: getConfig().headers\n        },\n        successCallback,\n        errorCallback\n      );\n    },\n    getPlutusEligibility(data, successCallback, errorCallback) {\n      RequestManager.handle(\n        {\n          method: 'post',\n          url: config('plutus').clientUrl,\n          data\n        },\n        successCallback,\n        errorCallback\n      );\n    },\n    resendBNPLOTP(transactionId, successCallback, errorCallback) {\n      RequestManager.handle(\n        {\n          method: 'get',\n          url: `${config('wallet').clientUrl}?transactionId=${transactionId}`,\n          headers: {\n            xMetaApp: getXMetaApp()\n          }\n        },\n        successCallback,\n        errorCallback\n      );\n    },\n    resendPaymentOTP(\n      { transactionId, instrumentType },\n      successCallback,\n      errorCallback\n    ) {\n      const { clientUrl, client, version } = config('ppsClient');\n      RequestManager.handle(\n        {\n          method: 'get',\n          url: `${clientUrl}v2/otp/resend/${instrumentType}/${transactionId}`,\n          headers: {\n            client,\n            version,\n            xMetaApp: getXMetaApp()\n          }\n        },\n        successCallback,\n        errorCallback\n      );\n    },\n    validateVPA(vpa, successCallback, errorCallback) {\n      const { clientUrl, client, version } = config('paymentsClient');\n      RequestManager.handle(\n        {\n          method: 'get',\n          url: `${clientUrl}vpa/validateVPA/${vpa}`,\n          headers: {\n            Client: client,\n            Version: version,\n            'Content-Type': 'application/json'\n          }\n        },\n        successCallback,\n        errorCallback\n      );\n    },\n    checkCardSuccessRate(binNumber, successCallback, errorCallback) {\n      const { clientUrl, client, version } = config('paymentsClient');\n      RequestManager.handle(\n        {\n          method: 'get',\n          url: `${clientUrl}binSuccessRate/${binNumber}`,\n          headers: {\n            Client: client,\n            Version: version,\n            'Content-Type': 'application/json'\n          }\n        },\n        successCallback,\n        errorCallback\n      );\n    },\n    removeSavedCard(instrumentId, successCallback, errorCallback) {\n      const { clientUrl, client, version } = config('paymentsClient');\n      RequestManager.handle(\n        {\n          method: 'del',\n          url: `${clientUrl}savedCard/at/${instrumentId}`,\n          headers: {\n            Client: client,\n            Version: version,\n            'Content-Type': 'application/json'\n          }\n        },\n        successCallback,\n        errorCallback\n      );\n    },\n    paynow(\n      url,\n      data,\n      successCallback,\n      errorCallback,\n      isDopeWithUserConsentEnabled = false\n    ) {\n      const { client, version } = config('paymentsClient');\n      let configHeaders = getConfig().headers;\n\n      if (\n        !isFeatureEnabled('DOPE_SYSTEM_CONSENT') &&\n        isDopeWithUserConsentEnabled\n      ) {\n        configHeaders['x-myntra-pps'] = 'dope.user.consent.cod=true;';\n      }\n\n      const headers = {\n        Client: client,\n        Version: version,\n        'Content-Type': 'application/json',\n        ...configHeaders\n      };\n      RequestManager.handle(\n        {\n          method: 'post',\n          url: url,\n          headers,\n          data\n        },\n        successCallback,\n        errorCallback\n      );\n    },\n    exchange(data, successCallback, errorCallback) {\n      const { clientUrl, client, version } = config('ppsClient');\n      const headers = {\n        Client: client,\n        Version: version,\n        'Content-Type': 'application/json',\n        ...getConfig().headers\n      };\n      RequestManager.handle(\n        {\n          method: 'post',\n          url: `${clientUrl}oee/v1/pay`,\n          headers,\n          data\n        },\n        successCallback,\n        errorCallback\n      );\n    },\n    userTwoFAVerification(data, successCallback, errorCallback) {\n      const { clientRoot, path } = config('shield');\n      const header = {\n        'Content-Type': 'application/json',\n        'x-meta-app': `channel=web;deviceId=${getDeviceId()}`\n      };\n      RequestManager.handle(\n        {\n          method: 'post',\n          url: `${clientRoot}${path}user/verification`,\n          data,\n          headers: header\n        },\n        successCallback,\n        errorCallback\n      );\n    },\n    getCardType(cardNo = '') {\n      const { clientUrl, client, version } = config('paymentsClient');\n\n      cardNo = cardNo.replace(/ /g, '').substring(0, 6); // maxDigits to send-> 6\n\n      const headers = {\n        Client: client,\n        Version: version,\n        'Content-Type': 'application/json',\n        ...getConfig().headers\n      };\n\n      return RequestManager.handleRequestWithPromise({\n        method: 'get',\n        url: `${clientUrl}cardToken/binDetails/${cardNo}`,\n        headers,\n        data: null\n      });\n    }\n  };\n})();\n\nexport default PaymentsManager;\n"],"sourceRoot":""}